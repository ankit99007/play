minikube start

kubectl create namespace dev

openssl genrsa -out emp.key 2048
openssl req -new -key emp.key -out emp.csr -subj "/CN=emp/O=dev"
openssl x509 -req -in emp.csr -signkey emp.key -out emp.crt -days 365

  
kubectl create configmap fresco-config --from-literal=SERVER_URL=https://www.fresco.me

kubectl create secret generic fresco-secret --from-literal=user=admin --from-literal=pass=pass

  fresco-config.yaml

apiVersion: v1
kind: ConfigMap
metadata:
  name: fresco-config
data:
  SERVER_URL: "https://www.fresco.me"


    fresco-secret.yaml

apiVersion: v1
kind: Secret
metadata:
  name: fresco-secret
type: Opaque
data:
  user: YWRtaW4=
  pass: cGFzcw==

  fresco-pv.yaml  

  apiVersion: v1
kind: PersistentVolume
metadata:
  name: fresco-pv
spec:
  storageClassName: manual
  capacity:
    storage: 100Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /tmp/fresco


fresco-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: fresco-pvc
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Mi

    
fresco-nginx-pod.yaml

  apiVersion: v1
kind: Pod
metadata:
  name: fresco-nginx-pod
spec:
  containers:
  - name: fresco-nginx-container
    image: nginx
    env:
    - name: SERVER_URL_ENV
      valueFrom:
        configMapKeyRef:
          name: fresco-config
          key: SERVER_URL
    volumeMounts:
    - name: secret-volume
      mountPath: /etc/test
  volumes:
  - name: secret-volume
    secret:
      secretName: fresco-secret

emp-role.yaml
  
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: emp-role
  namespace: dev
rules:
- apiGroups: [""]
  resources: ["pods", "deployments"]
  verbs: ["get", "list"]



 emp-bind.yaml
   
  apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: emp-bind
  namespace: dev
subjects:
- kind: User
  name: emp
roleRef:
  kind: Role
  name: emp-role
  apiGroup: rbac.authorization.k8s.io


  nginx.yaml

  apiVersion: v1
kind: Pod
metadata:
  name: fresco-nginx-pod
spec:
  containers:
  - name: fresco-nginx-container
    image: nginx
    volumeMounts:
    - name: fresco-volume
      mountPath: /usr/share/nginx/html
  volumes:
  - name: fresco-volume
    persistentVolumeClaim:
      claimName: fresco-pvc


kubectl apply -f fresco-config.yaml
kubectl apply -f fresco-secret.yaml
kubectl apply -f fresco-pv.yaml
kubectl apply -f fresco-pvc.yaml
kubectl apply -f fresco-nginx-pod.yaml
kubectl apply -f emp-role.yaml
kubectl apply -f emp-bind.yaml


kubectl --context=dev-ctx apply -f nginx.yaml
  
   

  
